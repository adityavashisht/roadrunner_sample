
package com.scoa.roadrunner.connector.api;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "RR09", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://rezdsp.shuttlecompanyofamerica.com/ridefly/rr13.asmx?WSDL")
public class RR09
    extends Service
{

    private final static URL RR09_WSDL_LOCATION;
    private final static WebServiceException RR09_EXCEPTION;
    private final static QName RR09_QNAME = new QName("http://tempuri.org/", "RR09");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://rezdsp.shuttlecompanyofamerica.com/ridefly/rr13.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        RR09_WSDL_LOCATION = url;
        RR09_EXCEPTION = e;
    }

    public RR09() {
        super(__getWsdlLocation(), RR09_QNAME);
    }

    public RR09(WebServiceFeature... features) {
        super(__getWsdlLocation(), RR09_QNAME, features);
    }

    public RR09(URL wsdlLocation) {
        super(wsdlLocation, RR09_QNAME);
    }

    public RR09(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, RR09_QNAME, features);
    }

    public RR09(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RR09(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RR09Soap
     */
    @WebEndpoint(name = "RR09Soap")
    public RR09Soap getRR09Soap() {
        return super.getPort(new QName("http://tempuri.org/", "RR09Soap"), RR09Soap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RR09Soap
     */
    @WebEndpoint(name = "RR09Soap")
    public RR09Soap getRR09Soap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "RR09Soap"), RR09Soap.class, features);
    }

    /**
     * 
     * @return
     *     returns RR09Soap
     */
    @WebEndpoint(name = "RR09Soap12")
    public RR09Soap getRR09Soap12() {
        return super.getPort(new QName("http://tempuri.org/", "RR09Soap12"), RR09Soap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RR09Soap
     */
    @WebEndpoint(name = "RR09Soap12")
    public RR09Soap getRR09Soap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "RR09Soap12"), RR09Soap.class, features);
    }

    /**
     * 
     * @return
     *     returns RR09HttpGet
     */
    @WebEndpoint(name = "RR09HttpGet")
    public RR09HttpGet getRR09HttpGet() {
        return super.getPort(new QName("http://tempuri.org/", "RR09HttpGet"), RR09HttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RR09HttpGet
     */
    @WebEndpoint(name = "RR09HttpGet")
    public RR09HttpGet getRR09HttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "RR09HttpGet"), RR09HttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns RR09HttpPost
     */
    @WebEndpoint(name = "RR09HttpPost")
    public RR09HttpPost getRR09HttpPost() {
        return super.getPort(new QName("http://tempuri.org/", "RR09HttpPost"), RR09HttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RR09HttpPost
     */
    @WebEndpoint(name = "RR09HttpPost")
    public RR09HttpPost getRR09HttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "RR09HttpPost"), RR09HttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (RR09_EXCEPTION!= null) {
            throw RR09_EXCEPTION;
        }
        return RR09_WSDL_LOCATION;
    }

}
