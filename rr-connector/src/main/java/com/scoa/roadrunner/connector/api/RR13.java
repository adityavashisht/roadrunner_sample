
package com.scoa.roadrunner.connector.api;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "RR13", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://rezdsp.shuttlecompanyofamerica.com/ridefly/rr13.asmx?WSDL")
public class RR13
    extends Service
{

    private final static URL RR13_WSDL_LOCATION;
    private final static WebServiceException RR13_EXCEPTION;
    private final static QName RR13_QNAME = new QName("http://tempuri.org/", "RR13");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://rezdsp.shuttlecompanyofamerica.com/ridefly/rr13.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        RR13_WSDL_LOCATION = url;
        RR13_EXCEPTION = e;
    }

    public RR13() {
        super(__getWsdlLocation(), RR13_QNAME);
    }

    public RR13(WebServiceFeature... features) {
        super(__getWsdlLocation(), RR13_QNAME, features);
    }

    public RR13(URL wsdlLocation) {
        super(wsdlLocation, RR13_QNAME);
    }

    public RR13(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, RR13_QNAME, features);
    }

    public RR13(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RR13(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RR13Soap
     */
    @WebEndpoint(name = "RR13Soap")
    public RR13Soap getRR13Soap() {
        return super.getPort(new QName("http://tempuri.org/", "RR13Soap"), RR13Soap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RR13Soap
     */
    @WebEndpoint(name = "RR13Soap")
    public RR13Soap getRR13Soap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "RR13Soap"), RR13Soap.class, features);
    }

    /**
     * 
     * @return
     *     returns RR13Soap
     */
    @WebEndpoint(name = "RR13Soap12")
    public RR13Soap getRR13Soap12() {
        return super.getPort(new QName("http://tempuri.org/", "RR13Soap12"), RR13Soap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RR13Soap
     */
    @WebEndpoint(name = "RR13Soap12")
    public RR13Soap getRR13Soap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "RR13Soap12"), RR13Soap.class, features);
    }

    /**
     * 
     * @return
     *     returns RR13HttpGet
     */
    @WebEndpoint(name = "RR13HttpGet")
    public RR13HttpGet getRR13HttpGet() {
        return super.getPort(new QName("http://tempuri.org/", "RR13HttpGet"), RR13HttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RR13HttpGet
     */
    @WebEndpoint(name = "RR13HttpGet")
    public RR13HttpGet getRR13HttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "RR13HttpGet"), RR13HttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns RR13HttpPost
     */
    @WebEndpoint(name = "RR13HttpPost")
    public RR13HttpPost getRR13HttpPost() {
        return super.getPort(new QName("http://tempuri.org/", "RR13HttpPost"), RR13HttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RR13HttpPost
     */
    @WebEndpoint(name = "RR13HttpPost")
    public RR13HttpPost getRR13HttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "RR13HttpPost"), RR13HttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (RR13_EXCEPTION!= null) {
            throw RR13_EXCEPTION;
        }
        return RR13_WSDL_LOCATION;
    }

}
